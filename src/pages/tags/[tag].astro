---
import BlogPost from "../../components/BlogPost.astro";
import Layout from "../../layouts/Layout.astro";
import type { GetStaticPaths } from 'astro';

interface Post {
  url: string;
  frontmatter: {
    title: string;
    tags?: string[];
  };
}

interface Props {
  posts: Post[];
}

export const getStaticPaths: GetStaticPaths = async () => {
  const allPosts = await Astro.glob("../posts/*.md");
  const uniqueTags = [...new Set(allPosts.map((post) => post.frontmatter.tags).flat())];
  
  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) => post.frontmatter.tags.includes(tag));
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts }: Props = Astro.props;

if (typeof tag !== 'string') {
  throw new Error('Tag must be a string');
}

const filteredPosts = posts.filter((post) =>
  post.frontmatter?.tags ? post.frontmatter.tags.includes(tag) : false
);
---

<Layout title={tag}>
  <p>Entradas etiquetadas con {tag}</p>
  <ul>
    {posts.map((post) => <BlogPost url={post.url} title={post.frontmatter.title}/>)}
  </ul>
</Layout>
