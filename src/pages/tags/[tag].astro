---
import BlogPost from "../../components/BlogPost.astro";
import Layout from "../../layouts/Layout.astro";
import type { GetStaticPaths } from "astro";

import { getCollection } from "astro:content";

interface Post {
  slug: string;
  data: {
    title: string;
    tags?: string[];
  };
}

interface Props {
  posts: Post[];
}

export const getStaticPaths: GetStaticPaths = async () => {
  const allPosts = await getCollection("posts");
  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.data.tags).flat()),
  ];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.data.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
};

const { tag } = Astro.params;
const { posts }: Props = Astro.props;

if (typeof tag !== "string") {
  throw new Error("Tag must be a string");
}
---

<Layout title={tag}>
  <p>Entradas etiquetadas con {tag}</p>
  <ul>
    {posts.map((post) => <BlogPost url={post.slug} title={post.data.title} />)}
  </ul>
</Layout>
